// <auto-generated />
using System;
using FileManager.Helpers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FileManager.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20190319070904_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FileManager.Entities.Objects", b =>
                {
                    b.Property<int>("objectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("binaryData");

                    b.Property<int>("left");

                    b.Property<int>("level");

                    b.Property<string>("objectName");

                    b.Property<int>("right");

                    b.Property<bool>("type");

                    b.Property<int>("userId");

                    b.HasKey("objectId");

                    b.HasIndex("userId");

                    b.ToTable("Objects");
                });

            modelBuilder.Entity("FileManager.Entities.Permissions", b =>
                {
                    b.Property<int>("permissionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("childUserId");

                    b.Property<int>("objectId");

                    b.Property<int?>("parentUserId");

                    b.Property<bool>("read");

                    b.Property<bool>("write");

                    b.HasKey("permissionId");

                    b.HasIndex("childUserId");

                    b.HasIndex("objectId");

                    b.HasIndex("parentUserId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("FileManager.Entities.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("HashKey");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<string>("Role");

                    b.Property<string>("Token");

                    b.Property<string>("login");

                    b.Property<string>("name");

                    b.Property<string>("secondName");

                    b.HasKey("userId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FileManager.Entities.Objects", b =>
                {
                    b.HasOne("FileManager.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FileManager.Entities.Permissions", b =>
                {
                    b.HasOne("FileManager.Entities.User", "childUser")
                        .WithMany()
                        .HasForeignKey("childUserId");

                    b.HasOne("FileManager.Entities.Objects", "obj")
                        .WithMany()
                        .HasForeignKey("objectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FileManager.Entities.User", "parentUser")
                        .WithMany()
                        .HasForeignKey("parentUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
